// Generated by CoffeeScript 1.3.1
(function() {

  $(function() {
    var Form;
    Form = (function() {

      Form.name = 'Form';

      function Form() {
        this.el = $('.newsletter form');
        this.open = true;
        this.inputEl = this.el.find('input').first();
        this.buttonEl = this.el.find('a.button');
        this.successEl = this.el.find('.success');
        this.errorEl = this.el.find('.error');
        this.spinner = null;
        this._initHandlers();
      }

      Form.prototype.email = function() {
        return $.trim(this.inputEl.val());
      };

      Form.prototype.isEmailValid = function() {
        return this.email().match(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i) !== null;
      };

      Form.prototype._startSpinner = function() {
        var opts, progressEl;
        progressEl = this.el.find('.progress');
        opts = {
          length: 6,
          width: 3,
          radius: 8
        };
        this.spinner = new Spinner(opts).spin();
        return progressEl.append(this.spinner.el);
      };

      Form.prototype._initHandlers = function() {
        var _this = this;
        this.el.submit(function() {
          if (_this.open) {
            _this._handleSubmission();
          }
          return false;
        });
        return this.buttonEl.click(function() {
          if (_this.open) {
            _this._handleSubmission();
          }
          return false;
        });
      };

      Form.prototype._handleSubmission = function() {
        var _this = this;
        if (this.isEmailValid()) {
          this.inputEl.attr('readonly', 'readonly').blur();
          this.errorEl.hide();
          this._startSpinner();
          return $.ajax({
            type: "POST",
            url: "/subscribe",
            data: {
              'email': this.email()
            },
            success: function() {
              _this.spinner.stop();
              _this.successEl.show();
              return _this.open = false;
            }
          });
        } else {
          return this.errorEl.show();
        }
      };

      return Form;

    })();
    return new Form();
  });

}).call(this);
